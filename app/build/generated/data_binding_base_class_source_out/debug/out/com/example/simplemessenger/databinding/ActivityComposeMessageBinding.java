// Generated by view binder compiler. Do not edit!
package com.example.simplemessenger.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.CheckBox;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.simplemessenger.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityComposeMessageBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonSetReminder;

  @NonNull
  public final CheckBox checkboxSetReminder;

  @NonNull
  public final TextInputEditText inputMessage;

  @NonNull
  public final AutoCompleteTextView inputRecipient;

  @NonNull
  public final TextInputEditText inputSubject;

  @NonNull
  public final TextInputLayout layoutMessage;

  @NonNull
  public final TextInputLayout layoutRecipient;

  @NonNull
  public final TextInputLayout layoutSubject;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textReminderTime;

  @NonNull
  public final Toolbar toolbar;

  private ActivityComposeMessageBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonSetReminder, @NonNull CheckBox checkboxSetReminder,
      @NonNull TextInputEditText inputMessage, @NonNull AutoCompleteTextView inputRecipient,
      @NonNull TextInputEditText inputSubject, @NonNull TextInputLayout layoutMessage,
      @NonNull TextInputLayout layoutRecipient, @NonNull TextInputLayout layoutSubject,
      @NonNull ProgressBar progressBar, @NonNull TextView textReminderTime,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonSetReminder = buttonSetReminder;
    this.checkboxSetReminder = checkboxSetReminder;
    this.inputMessage = inputMessage;
    this.inputRecipient = inputRecipient;
    this.inputSubject = inputSubject;
    this.layoutMessage = layoutMessage;
    this.layoutRecipient = layoutRecipient;
    this.layoutSubject = layoutSubject;
    this.progressBar = progressBar;
    this.textReminderTime = textReminderTime;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityComposeMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityComposeMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_compose_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityComposeMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_set_reminder;
      MaterialButton buttonSetReminder = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetReminder == null) {
        break missingId;
      }

      id = R.id.checkbox_set_reminder;
      CheckBox checkboxSetReminder = ViewBindings.findChildViewById(rootView, id);
      if (checkboxSetReminder == null) {
        break missingId;
      }

      id = R.id.input_message;
      TextInputEditText inputMessage = ViewBindings.findChildViewById(rootView, id);
      if (inputMessage == null) {
        break missingId;
      }

      id = R.id.input_recipient;
      AutoCompleteTextView inputRecipient = ViewBindings.findChildViewById(rootView, id);
      if (inputRecipient == null) {
        break missingId;
      }

      id = R.id.input_subject;
      TextInputEditText inputSubject = ViewBindings.findChildViewById(rootView, id);
      if (inputSubject == null) {
        break missingId;
      }

      id = R.id.layout_message;
      TextInputLayout layoutMessage = ViewBindings.findChildViewById(rootView, id);
      if (layoutMessage == null) {
        break missingId;
      }

      id = R.id.layout_recipient;
      TextInputLayout layoutRecipient = ViewBindings.findChildViewById(rootView, id);
      if (layoutRecipient == null) {
        break missingId;
      }

      id = R.id.layout_subject;
      TextInputLayout layoutSubject = ViewBindings.findChildViewById(rootView, id);
      if (layoutSubject == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.text_reminder_time;
      TextView textReminderTime = ViewBindings.findChildViewById(rootView, id);
      if (textReminderTime == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityComposeMessageBinding((CoordinatorLayout) rootView, buttonSetReminder,
          checkboxSetReminder, inputMessage, inputRecipient, inputSubject, layoutMessage,
          layoutRecipient, layoutSubject, progressBar, textReminderTime, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
