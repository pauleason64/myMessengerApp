// Generated by view binder compiler. Do not edit!
package com.example.simplemessenger.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.simplemessenger.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMessageDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageButton btnArchive;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageButton btnDelete;

  @NonNull
  public final ImageButton btnForward;

  @NonNull
  public final ImageButton btnReply;

  @NonNull
  public final LinearLayout layoutReminder;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textDate;

  @NonNull
  public final TextView textFrom;

  @NonNull
  public final TextView textMessage;

  @NonNull
  public final TextView textReminderTime;

  @NonNull
  public final TextView textSubject;

  @NonNull
  public final TextView textTo;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMessageDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageButton btnArchive, @NonNull ImageButton btnBack, @NonNull ImageButton btnDelete,
      @NonNull ImageButton btnForward, @NonNull ImageButton btnReply,
      @NonNull LinearLayout layoutReminder, @NonNull NestedScrollView nestedScrollView,
      @NonNull ProgressBar progressBar, @NonNull TextView textDate, @NonNull TextView textFrom,
      @NonNull TextView textMessage, @NonNull TextView textReminderTime,
      @NonNull TextView textSubject, @NonNull TextView textTo, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnArchive = btnArchive;
    this.btnBack = btnBack;
    this.btnDelete = btnDelete;
    this.btnForward = btnForward;
    this.btnReply = btnReply;
    this.layoutReminder = layoutReminder;
    this.nestedScrollView = nestedScrollView;
    this.progressBar = progressBar;
    this.textDate = textDate;
    this.textFrom = textFrom;
    this.textMessage = textMessage;
    this.textReminderTime = textReminderTime;
    this.textSubject = textSubject;
    this.textTo = textTo;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMessageDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMessageDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_message_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMessageDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_archive;
      ImageButton btnArchive = ViewBindings.findChildViewById(rootView, id);
      if (btnArchive == null) {
        break missingId;
      }

      id = R.id.btn_back;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_delete;
      ImageButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btn_forward;
      ImageButton btnForward = ViewBindings.findChildViewById(rootView, id);
      if (btnForward == null) {
        break missingId;
      }

      id = R.id.btn_reply;
      ImageButton btnReply = ViewBindings.findChildViewById(rootView, id);
      if (btnReply == null) {
        break missingId;
      }

      id = R.id.layout_reminder;
      LinearLayout layoutReminder = ViewBindings.findChildViewById(rootView, id);
      if (layoutReminder == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.text_date;
      TextView textDate = ViewBindings.findChildViewById(rootView, id);
      if (textDate == null) {
        break missingId;
      }

      id = R.id.text_from;
      TextView textFrom = ViewBindings.findChildViewById(rootView, id);
      if (textFrom == null) {
        break missingId;
      }

      id = R.id.text_message;
      TextView textMessage = ViewBindings.findChildViewById(rootView, id);
      if (textMessage == null) {
        break missingId;
      }

      id = R.id.text_reminder_time;
      TextView textReminderTime = ViewBindings.findChildViewById(rootView, id);
      if (textReminderTime == null) {
        break missingId;
      }

      id = R.id.text_subject;
      TextView textSubject = ViewBindings.findChildViewById(rootView, id);
      if (textSubject == null) {
        break missingId;
      }

      id = R.id.text_to;
      TextView textTo = ViewBindings.findChildViewById(rootView, id);
      if (textTo == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMessageDetailBinding((CoordinatorLayout) rootView, btnArchive, btnBack,
          btnDelete, btnForward, btnReply, layoutReminder, nestedScrollView, progressBar, textDate,
          textFrom, textMessage, textReminderTime, textSubject, textTo, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
